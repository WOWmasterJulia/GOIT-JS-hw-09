{"mappings":"iiBAAA,IAAAA,EAAAC,EAAA,SAuCA,SAASC,EAAcC,EAAUC,GAC/B,OAAO,IAAIC,SAAQ,SAACC,EAASC,GAC3B,IAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,WACLH,EAEFF,EAAQ,CAAEH,WAAUC,UAGpBG,EAAO,CAAEJ,WAAUC,S,GAEpBA,E,IAjDPQ,EAAAZ,GAASa,OAAOC,KAAK,CACnBC,MAAO,QACPZ,SAAU,YACVa,SAAU,QACVC,QAAS,IAOIC,SAASC,cAAc,SAC/BC,iBAAiB,UAExB,SAAoBC,GAClBA,EAAIC,iBAKJ,IAJA,IAAIC,EAAQC,OAAOH,EAAII,cAAcC,SAAStB,MAAMuB,OAC9CC,EAAOJ,OAAOH,EAAII,cAAcC,SAASE,KAAKD,OAC9CE,EAASL,OAAOH,EAAII,cAAcC,SAASG,OAAOF,OAE/CG,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAIlB5B,EAAA4B,EAAGP,GACdQ,MAAK,SAAAC,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MACjB6B,QAAQC,IAAI,uBAAwCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,OAC1DQ,EAAAZ,GAASa,OAAOuB,QAAQ,qBAAoCD,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAEnEiC,OAAM,SAAAL,G,IAAG7B,EAAQ6B,EAAR7B,SAAUC,EAAK4B,EAAL5B,MAClB6B,QAAQC,IAAI,sBAAqCC,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,OACvDQ,EAAAZ,GAASa,OAAOyB,QAAQ,oBAAmCH,OAAfhC,EAAS,QAAYgC,OAAN/B,EAAM,M,IAErEmB,GAAgBK,C","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\nNotiflix.Notify.init({\n  width: '280px',\n  position: 'right-top',\n  distance: '130px',\n  opacity: 1,\n  // ...\n});\n\n\n\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', genPromise);\n\nfunction genPromise(evt) {\n  evt.preventDefault();\n  let delay = Number(evt.currentTarget.elements.delay.value);\n  const step = Number(evt.currentTarget.elements.step.value);\n  const amount = Number(evt.currentTarget.elements.amount.value);\n  \n  for (let i = 1; i <= amount; i += 1) {\n    // \n    \n    // Надо вызывать ф-ю createPromise:\n    createPromise(i, delay)\n      .then(({ position, delay }) => {\n        console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n    delay = delay + step;\n  }\n  // evt.currentTarget.reset();\n  // console.log(delay, step, amount);\n}\nfunction createPromise(position, delay) {\n  return new Promise((resolve, reject) => {\n    const shouldResolve = Math.random() > 0.3;\n    setTimeout(() => {\n      if (shouldResolve) {\n        // Fulfill\n        resolve({ position, delay });\n      } else {\n        // Reject\n        reject({ position, delay });\n      }\n    }, delay);\n  });\n};\n\n"],"names":["$6JpON","parcelRequire","$ce04d3a99e08e73b$var$createPromise","position","delay","Promise","resolve","reject","shouldResolve","Math","random","setTimeout","$parcel$interopDefault","Notify","init","width","distance","opacity","document","querySelector","addEventListener","evt","preventDefault","delay1","Number","currentTarget","elements","value","step","amount","i","then","param","console","log","concat","success","catch","failure"],"version":3,"file":"03-promises.6fab0d04.js.map"}