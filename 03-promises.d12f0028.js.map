{"mappings":"oeAAAA,EAAA,eAWwBC,KAAKC,SAAW,GAGpCC,QAAQ,OAERC,OAAO,QASRC,MAAK,EAACC,SAAEA,EAAQC,MAAEA,MACjBC,QAAQC,IAAI,uBAAqBH,QAAiBC,MAAU,IAE7DG,OAAM,EAACJ,SAAEA,EAAQC,MAAEA,MAClBC,QAAQC,IAAI,sBAAoBH,QAAeC,MAAU","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n// function createPromise(position, delay) {\n//   const shouldResolve = Math.random() > 0.3;\n//   if (shouldResolve) {\n//     // Fulfill\n//   } else {\n//     // Reject\n//   }\n// }\n\nfunction createPromise(position, delay) {\n  const shouldResolve = Math.random() > 0.3;\n  \n  if (shouldResolve) {\n    resolve(\"Yes\");\n  } else {\n    reject(\"No\");\n  }\n}\n\n// promise\n//   .then(value => console.log(value)) \n//   .catch(error => console.log(error))\n\ncreatePromise(2, 1500)\n  .then(({ position, delay }) => {\n    console.log(`✅ Fulfilled promise ${position} in ${delay}ms`);\n  })\n  .catch(({ position, delay }) => {\n    console.log(`❌ Rejected promise ${position} in ${delay}ms`);\n  });"],"names":["parcelRequire","Math","random","resolve","reject","then","position","delay","console","log","catch"],"version":3,"file":"03-promises.d12f0028.js.map"}